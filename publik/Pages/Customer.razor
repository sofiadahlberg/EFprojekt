@page "/customer"
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Threading.Tasks;


<PageTitle>Customer</PageTitle>

<h1>Hello, world!</h1>
<!--
<script>
    const postData = {
        FirstName: "John",
        LastName: "Doe",
        PhoneNumber: "123456789",
        Date: "2022-03-01", // Set the desired date
        ApiKeyRequired: false,
        TreatmentId: 1 // Set the desired TreatmentId
    };

    fetch("http://localhost:5099/api/customer", {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(postData)
    })
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));
</script>-->
<form>
    <div>
        <label for="firstName">Förnamn:</label>
        <input id="firstName" @bind="postData.FirstName" />
    </div>
    <div>
        <label for="lastName">Efternamn:</label>
        <input id="lastName" @bind="postData.LastName" />
    </div>
    <div>
        <label for="phoneNumber">Telefonnummer:</label>
        <input id="phoneNumber" @bind="postData.PhoneNumber" />
    </div>
   <div>
    <label for="dateTime">Datum och tid:</label>
    <input id="dateTime" type="datetime-local" @bind="DateAndTime" />
</div>
    <div>
        <label for="apiKeyRequired">API Key Required:</label>
        <input id="apiKeyRequired" type="checkbox" @bind="postData.ApiKeyRequired" />
    </div>
     <div>
        <label for="treatmentId">Treatment ID:</label>
        <select id="treatmentId" @bind="selectedTreatmentId">
            <option value="">Vad vill du göra?</option>
            @foreach (var treatment in TreatmentOptions)
            {
                <option value="@treatment.TreatmentId">@treatment.Category</option>
            }
        </select>
    </div>

    <button type="button" @onclick="SendPostRequest">Submit</button>
</form>

@code {
    private DateTime DateAndTime { get; set; } = DateTime.Now;
     private List<Treatment> TreatmentOptions = new List<Treatment>();
    //Visar dagens datum
     private DateTime DateOfToday = DateTime.Today;
     
    private CustomerInputModel postData = new CustomerInputModel();
 private int selectedTreatmentId;
     protected override async Task OnInitializedAsync()
    {
        TreatmentOptions = await FetchTreatmentOptionsAsync();
    }

    private async Task<List<Treatment>> FetchTreatmentOptionsAsync()
    {
        using (var client = new HttpClient())
        {
            var response = await client.GetFromJsonAsync<List<Treatment>>("http://localhost:5099/api/treatment");
            return response ?? new List<Treatment>();
        }
    }

    private async Task SendPostRequest()
    {
        postData.TreatmentId = selectedTreatmentId;

        var UrlAPI = "http://localhost:5099/api/customer";

        using (var client = new HttpClient())
        {
            var response = await client.PostAsJsonAsync(UrlAPI, postData);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<Customer>();
                Console.WriteLine($"POST request successful. Response: {result}");
            }
            else
            {
                Console.WriteLine($"POST request failed. Status code: {response.StatusCode}");
            }
        }
    }

    public class CustomerInputModel
    {
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? PhoneNumber { get; set; }
        public DateTime Date { get; set; }
        public bool ApiKeyRequired { get; set; }
         public int TreatmentId { get; set; }
        
    }
    public class Treatment
    {
        public int TreatmentId { get; set; }
        public string? Category { get; set; }
    }
}