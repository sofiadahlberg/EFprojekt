@page "/customer"
@inject HttpClient Http

<PageTitle>Customer</PageTitle>

<h1>Vad vill du göra?</h1>
<div class="category-container">
    <div class="@ContainerClass(1)" @onclick="() => SelectContainer(1)">
        <img src="/images/scissors-128.png" class="customerImg" alt="Scissor">
        <span>Scissor</span>
    </div>
    <div class="@ContainerClass(2)" @onclick="() => SelectContainer(2)">
        <img src="/images/scissush-128.png" class="customerImg" alt="Scissor and brush">
        <span>Scissor and Brush</span>
    </div>
    <div class="@ContainerClass(3)" @onclick="() => SelectContainer(3)">
        <img src="/images/hair-dryer-64.png" class="customerImg" alt="Hair Dryer">
        <span>Hair Dryer</span>
    </div>
    <div class="@ContainerClass(4)" @onclick="() => SelectContainer(4)">
        <img src="/images/palette-128.png" class="customerImg" alt="Color palette">
        <span>Color Palette</span>
    </div>
</div>
<form>
    <fieldset>
    <legend>Bokningsinformation</legend>

    @* <div>
        <label for="apiKeyRequired">API Key Required:</label>
        <input id="apiKeyRequired" type="checkbox" @bind="postData.ApiKeyRequired" />
    </div> *@
     <div>
        <label for="treatmentId">Treatment ID:</label>
        <select id="treatmentId" @bind="selectedTreatmentId">
            <option value="">Vad vill du göra?</option>
            @foreach (var treatment in TreatmentOptions)
            {
                <option value="@treatment.TreatmentId">@treatment.Category</option>
            }
        </select>
    </div>
    </fieldset>
    <fieldset>
        <legend>Personlig information</legend>
    <div>
        <label for="firstName">Förnamn:</label>
        <input id="firstName" @bind="postData.FirstName" />
    </div>
    <div>
        <label for="lastName">Efternamn:</label>
        <input id="lastName" @bind="postData.LastName" />
    </div>
    <div>
        <label for="phoneNumber">Telefonnummer:</label>
        <input id="phoneNumber" @bind="postData.PhoneNumber" />
    </div>
   <div>
    <label for="dateTime">Datum och tid:</label>
    <input id="dateTime" type="datetime-local" @bind="DateAndTime" />
</div>
</fieldset>


    <button type="button" @onclick="SendPostRequest">Submit</button>
</form>

@code {
    private DateTime DateAndTime { get; set; } = DateTime.Now;


     private List<Treatment> TreatmentOptions = new List<Treatment>();
    //Visar dagens datum
     private DateTime DateOfToday = DateTime.Today;
     
    private CustomerInputModel postData = new CustomerInputModel();
 private int selectedTreatmentId;
     protected override async Task OnInitializedAsync()
    {
        TreatmentOptions = await FetchTreatmentOptionsAsync();
    }

    private async Task<List<Treatment>> FetchTreatmentOptionsAsync()
    {
        using (var client = new HttpClient())
        {
            var response = await client.GetFromJsonAsync<List<Treatment>>("http://localhost:5099/api/treatment");
            return response ?? new List<Treatment>();
        }
    }

    private async Task SendPostRequest()
    {
        postData.TreatmentId = selectedTreatmentId;

        var UrlAPI = "http://localhost:5099/api/customer";

        using (var client = new HttpClient())
        {
            var response = await client.PostAsJsonAsync(UrlAPI, postData);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<Customer>();
                Console.WriteLine($"POST request successful. Response: {result}");
            }
            else
            {
                Console.WriteLine($"POST request failed. Status code: {response.StatusCode}");
            }
        }
    }

    int selectedContainer = 0;

    string ContainerClass(int containerNumber) =>
        selectedContainer == containerNumber ? "icon-container clicked" : "icon-container" + containerNumber + " not-selected";
    void SelectContainer(int containerNumber) =>
        selectedContainer = containerNumber;

    public class CustomerInputModel
    {
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? PhoneNumber { get; set; }
        public DateTime Date { get; set; }
        public bool ApiKeyRequired { get; set; }
         public int TreatmentId { get; set; }
        
    }
    public class Treatment
    {
        public int TreatmentId { get; set; }
        public string? Category { get; set; }
    }
}